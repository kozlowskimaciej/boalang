/*
    STRUCT
*/
struct S {
    mut int a;
    float b;
}

mut S st_obj = {6, 1.0};
st_obj.a = st_obj.b as int;

S another_st_obj = {1, 6.0};
st_obj = another_st_obj;
// another_st_obj = st_obj; // BŁĄD, próba przypisania wartości do stałej


/*
    VARIANT
*/
variant V { int, float, S };

mut V varnt_obj = st_obj;

if ( varnt_obj is S ) {
    print varnt_obj.a;
}

inspect varnt_obj {
    int val => print val;
    float val => print val;
    S val => print val.a;
    default => print "default";
}

/*
    PRINT & WHILE
*/
mut int a = 1;
while (a < 5) {
    print a;  // 1 2 3 4 5
    a = a + 1;    
}

/*
    LOGICAL OPERATORS
*/
a = 1;
mut bool b = false;
b = a as bool;  // true
b = !a;  // false
b = a or false;  // true
b = a and false; // false

int c = 2;
b = a >= c;  // true  
b = a < c;  // false
b = a <= c;  // false

/*
    FUNCTIONS
*/
variant Numeric { int, float };

Numeric fib(Numeric n) {
    if (n is int) {
        int val = n as int;
        if (val <= 1) {
            return n;
        }
        return fib((n - 1) as Numeric) + fib((n - 2) as Numeric);
    } else {
        float val = n as float;
        if (val <= 1.0) {
            return n;
        }
        return fib((n - 1.0) as Numeric) + fib((n - 2.0) as Numeric);
    }
}

Numeric fib2(Numeric n) {
    inspect n {
        int val => {
            if (val <= 1) {
                return n;
            }
            return fib((val - 1) as Numeric) + fib((val - 2) as Numeric);
        }
        float val => {
            if (val <= 1.0) {
                return n;
            }
            return fib((val - 1) as Numeric) + fib((val - 2) as Numeric);
        }
    }
}

int fibval = fib2(3 as Numeric) as int;
print fibval;